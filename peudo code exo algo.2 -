- 3.2 -


Déclaration

String : mdp
Int : tentative = 0

Saisie

Écrire : Entrez votre mot de passe

Traitement 

Do {
    Lire : mdp
    Si (mdp != formation) {
        Écrire : Mot de passe incorrect, veuillez réessayez 
        essais +1 }
    Sinon {   
        Écrire : Vous êtes connecté }   
} While ((mdp != formation) && (tentative < 3))

Si (tentative = 3) {
    Écrire : votre compte à été bloqué } 


- 3.6 -


Déclaration

Int random
Int input
Int tentative = 1

Saisie

new random = 0,100
Écrire : Devinez le nombre choisit aléatoirement

Traitement

Do {
    Lire : input
    Si (input = random) {
        Écrire : Vous avez trouvé le nombre en +tentative tentative(s) }
    Sinon Si (input > random) {
        Écrire : Incorrect. Indice : votre nombre est plus grand que l'aléatoire
        tentative ++ }
    Sinon {
        Écrire : Incorrect. Indice : votre nombre est plus petit que l'aléatoire
        tentative ++ }    
} While (input != random)


- 3.7 -


Déclaration

Int somme
Int magasin = 1

Saisie

Écrire : Entrez la somme à dépenser
Lire : somme

Traitement

Do {
    ((somme /2) somme --)
    magasin ++
} While (somme <= 2)

Écrire : Barnabé est passé dans +magasin magasin(s)


- 4.1 -


Déclaration

String result "non trouvé"
int userinput
int tab {8, 16, 32, 64, 128, 256, 512}

Saisie

Écrire : Entrez les nombres à trier
Lire : nbruser

Traitement

Pour (int i=0; i<tab.lenght; i++)

Si nbruser = tab[i] {
    result = trouvé
    Écrire : result
 }

